// ==UserScript==
// @name          discobolus
// @author        Jeremie Jarosh
// @namespace     http://trejeraos.com/
// @description   A third party add-on for the website dcbservice.com
// @version       0.1.3
// @include       http://dcbservice.com/*
// @include       http://www.dcbservice.com/*
// @include       https://dcbservice.com/*
// @include       https://www.dcbservice.com/*
// ==/UserScript==

var htmlClass = "discobolus"

var elmHead = document.head;
var elmHtml = document.body.parentElement;
var elmStyle;
var elmScript;

var stylesDataUrl = "data:text/css;charset=utf-8;base64,QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTM4NHB4KSB7CiAgLmRpc2NvYm9sdXMgLmNvbnRlbnQtd3JhcHBlciB7CiAgICB3aWR0aDogMTM1MHB4OwogIH0KICAuZGlzY29ib2x1cyAucmlnaHRjb2wgewogICAgd2lkdGg6IDEwNzRweDsKICB9CiAgLmRpc2NvYm9sdXMgLmNvbnRyb2xzdHJpcCB7CiAgICBiYWNrZ3JvdW5kLXNpemU6IDExMDFweCA2NHB4OwogICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAtNXB4OwogIH0KICAuZGlzY29ib2x1cyAucHJvZHVjdGRldGFpbCBoMS50aXRsZSB7CiAgICB3aWR0aDogODIwcHg7CiAgfQogIC5kaXNjb2JvbHVzIC5kZXRhaWxkYXRhY29sIHsKICAgIHdpZHRoOiA0NDBweDsKICB9Cn0KQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTc0MnB4KSB7CiAgLmRpc2NvYm9sdXMgLmNvbnRlbnQtd3JhcHBlciB7CiAgICB3aWR0aDogMTcwOHB4OwogIH0KICAuZGlzY29ib2x1cyAucmlnaHRjb2wgewogICAgd2lkdGg6IDE0MzJweDsKICB9CiAgLmRpc2NvYm9sdXMgLmNvbnRyb2xzdHJpcCB7CiAgICBiYWNrZ3JvdW5kLXNpemU6IDE0NjlweCA2NHB4OwogICAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiAtMTBweDsKICB9Cn0KLmRpc2NvYm9sdXMgI2RjYnNtZW51IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwNDBlOwp9CkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEzODRweCkgewogIC5kaXNjb2JvbHVzIC5oZWFkbWVudSB7CiAgICB3aWR0aDogMTM1MHB4OwogIH0KICAuZGlzY29ib2x1cyAjZGNic21lbnUgewogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL3d3dy5kY2JzZXJ2aWNlLmNvbS9jb250ZW50L21lbnViYXIyL3RyYWRlcGFwZXJiYWNrcy5wbmcnKTsKICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA2ODVweCAwcHg7CiAgICBiYWNrZ3JvdW5kLXNpemU6IDM2M3B4IDM2cHg7CiAgfQogIC5kaXNjb2JvbHVzICNuYXZzZWFyY2hib3hiZywKICAuZGlzY29ib2x1cyAjbmF2c2VhcmNoIHsKICAgIGZsb2F0OiBub25lOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiAwcHg7CiAgfQogIC5kaXNjb2JvbHVzICNuYXZzZWFyY2hib3hiZyB7CiAgICByaWdodDogNDhweDsKICB9CiAgLmRpc2NvYm9sdXMgI25hdnNlYXJjaCB7CiAgICByaWdodDogMHB4OwogIH0KfQpAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNzQycHgpIHsKICAuZGlzY29ib2x1cyAuaGVhZG1lbnUgewogICAgd2lkdGg6IDE3MDhweDsKICB9CiAgLmRpc2NvYm9sdXMgI2RjYnNtZW51IHsKICAgIGJhY2tncm91bmQtc2l6ZTogNzIzcHggMzZweDsKICB9Cn0KLmRpc2NvYm9sdXMgLnRodW1ibGlzdC5oaWdobGlnaHQtbmV3LXNlcmllcyAucmVsaXN0Lm5ldy1zZXJpZXMsCi5kaXNjb2JvbHVzIC50aHVtYmxpc3QuaGlnaGxpZ2h0LW5ldy1zZXJpZXMgLmV4aXN0aW5nLXNlcmllcyB7CiAgZGlzcGxheTogbm9uZTsKfQouZGlzY29ib2x1cyAuaGlnaGxpZ2h0LW5ldy1zZXJpZXMtY29udHJvbCA+IGlucHV0W3R5cGU9Y2hlY2tib3hdIHsKICBtYXJnaW46IDBweCA2cHg7CiAgd2lkdGg6IHVuc2V0OwogIGhlaWdodDogdW5zZXQ7Cn0KCi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zjg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW14aGNtZGxMWE5qY21WbGJpNXNaWE56SWl3aWJHRnlaMlV0YzJOeVpXVnVMV1JqWW5OdFpXNTFMbXhsYzNNaUxDSm9hV2RvYkdsbmFIUXRibVYzTFhObGNtbGxjeTVzWlhOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVTkZMRzFDUVVFeVFqdEZRVU42UWl4WFFVTkZPMGxCUTBVc1lVRkJRVHM3UlVGR1NpeFhRVWxGTzBsQlEwVXNZVUZCUVRzN1JVRk1TaXhYUVZORk8wbEJRMFVzTkVKQlFVRTdTVUZEUVN3eVFrRkJRVHM3UlVGWVNpeFhRV1ZGTEdWQlFXVXNSMEZCUlR0SlFVTm1MRmxCUVVFN08wVkJhRUpLTEZkQmEwSkZPMGxCUTBVc1dVRkJRVHM3TzBGQlMwNHNiVUpCUVRKQ08wVkJRM3BDTEZkQlEwVTdTVUZEUlN4aFFVRkJPenRGUVVaS0xGZEJTVVU3U1VGRFJTeGhRVUZCT3p0RlFVeEtMRmRCVTBVN1NVRkRSU3cwUWtGQlFUdEpRVU5CTERSQ1FVRkJPenM3UVVOMFExSXNWMEZEU1R0RlFVTkpMSGxDUVVGQk96dEJRVWxCTEcxQ1FVRXlRanRGUVVFelFpeFhRVU5KTzBsQlEwa3NZVUZCUVRzN1JVRkdVaXhYUVV0Sk8wbEJRMGtzYzBKQlFYTkNMR3RGUVVGMFFqdEpRVU5CTERSQ1FVRkJPMGxCUTBFc09FSkJRVUU3U1VGRFFTd3lRa0ZCUVRzN1JVRlVVaXhYUVZsSk8wVkJXa29zVjBGaFNUdEpRVU5KTEZkQlFVRTdTVUZEUVN4clFrRkJRVHRKUVVOQkxGRkJRVUU3TzBWQmFFSlNMRmRCYlVKSk8wbEJRMGtzVjBGQlFUczdSVUZ3UWxJc1YwRjFRa2s3U1VGRFNTeFZRVUZCT3pzN1FVRkpVaXh0UWtGQk1rSTdSVUZCTTBJc1YwRkRTVHRKUVVOSkxHRkJRVUU3TzBWQlJsSXNWMEZMU1R0SlFVTkpMREpDUVVGQk96czdRVU40UTJoQ0xGZEJRMFVzVjBGQlZTeHhRa0ZEVWl4UlFVRlBPMEZCUmxnc1YwRkRSU3hYUVVGVkxIRkNRVVZTTzBWQlEwVXNZVUZCUVRzN1FVRkxRU3hYUVVSS0xEaENRVU5OTEZGQlFVODdSVUZEVEN4bFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxHRkJRVUVpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKQWJXVmthV0VnYzJOeVpXVnVJSHRjYmlBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERXpPRFJ3ZUNrZ2UxeHVJQ0FnSUM1a2FYTmpiMkp2YkhWeklIdGNiaUFnSUNBZ0lDNWpiMjUwWlc1MExYZHlZWEJ3WlhJZ2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UTTFNSEI0TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnTG5KcFoyaDBZMjlzSUh0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURFd056UndlRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTHk4Z2NISnZaSFZqZENCc2FYTjBjMXh1SUNBZ0lDQWdMbU52Ym5SeWIyeHpkSEpwY0NCN1hHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ01URXdNWEI0SURZMGNIZzdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjR0ZURvZ0xUVndlRHRjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnTHk4Z2NISnZaSFZqZENCa1pYUmhhV3h6WEc0Z0lDQWdJQ0F1Y0hKdlpIVmpkR1JsZEdGcGJDQm9NUzUwYVhSc1pTQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQTRNakJ3ZUR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUM1a1pYUmhhV3hrWVhSaFkyOXNJSHRjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRFEwTUhCNE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lFQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQXhOelF5Y0hncElIdGNiaUFnSUNBdVpHbHpZMjlpYjJ4MWN5QjdYRzRnSUNBZ0lDQXVZMjl1ZEdWdWRDMTNjbUZ3Y0dWeUlIdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERTNNRGh3ZUR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUM1eWFXZG9kR052YkNCN1hHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeE5ETXljSGc3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUM4dklIQnliMlIxWTNRZ2JHbHpkSE5jYmlBZ0lDQWdJQzVqYjI1MGNtOXNjM1J5YVhBZ2UxeHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklERTBOamx3ZUNBMk5IQjRPMXh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1TFhnNklDMHhNSEI0TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc1QWFXMXdiM0owSUZ3aWJHRnlaMlV0YzJOeVpXVnVMV1JqWW5OdFpXNTFYQ0k3SWl3aUxtUnBjMk52WW05c2RYTWdlMXh1SUNBZ0lDTmtZMkp6YldWdWRTQjdYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ013TURBME1HVTdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ1FHMWxaR2xoSUhOamNtVmxiaUI3WEc0Z0lDQWdJQ0FnSUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBeE16ZzBjSGdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQzVvWldGa2JXVnVkU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREV6TlRCd2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSTJSalluTnRaVzUxSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29KMmgwZEhCek9pOHZkM2QzTG1SalluTmxjblpwWTJVdVkyOXRMMk52Ym5SbGJuUXZiV1Z1ZFdKaGNqSXZkSEpoWkdWd1lYQmxjbUpoWTJ0ekxuQnVaeWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGNtVndaV0YwT2lCdWJ5MXlaWEJsWVhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dOamcxY0hnZ01IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YzJsNlpUb2dNell6Y0hnZ016WndlRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0kyNWhkbk5sWVhKamFHSnZlR0puTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJMjVoZG5ObFlYSmphQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14dllYUTZJRzV2Ym1VN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnZjRG9nTUhCNE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FqYm1GMmMyVmhjbU5vWW05NFltY2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpwWjJoME9pQTBPSEI0TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWpibUYyYzJWaGNtTm9JSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5YVdkb2REb2dNSEI0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERTNOREp3ZUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnTG1obFlXUnRaVzUxSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVRjd09IQjRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBalpHTmljMjFsYm5VZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRjMmw2WlRvZ056SXpjSGdnTXpad2VEdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JuMGlMQ0l1WkdselkyOWliMngxY3lCN1hHNGdJQzUwYUhWdFlteHBjM1F1YUdsbmFHeHBaMmgwTFc1bGR5MXpaWEpwWlhNZ2UxeHVJQ0FnSUM1eVpXeHBjM1F1Ym1WM0xYTmxjbWxsY3l4Y2JpQWdJQ0F1WlhocGMzUnBibWN0YzJWeWFXVnpJSHRjYmlBZ0lDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0xtaHBaMmhzYVdkb2RDMXVaWGN0YzJWeWFXVnpMV052Ym5SeWIyd2dlMXh1SUNBZ0lDQWdKaUErSUdsdWNIVjBXM1I1Y0dVOVkyaGxZMnRpYjNoZElIdGNiaUFnSUNBZ0lDQWdJQ0J0WVhKbmFXNDZJREJ3ZUNBMmNIZzdYRzRnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJSFZ1YzJWME8xeHVJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkVzV6WlhRN1hHNGdJQ0FnSUNCOVhHNGdJSDFjYm4waVhTd2labWxzWlNJNkltMWhhVzR1WTNOekluMD0gKi8K";
var scriptDataUrl = "data:text/javascript;charset=utf-8;base64,";

// add Class to html for easier css overrides
elmHtml.classList.add(htmlClass);

// add style to the head
elmStyle = document.createElement("link");
elmStyle.setAttribute('type', "text/css");
elmStyle.setAttribute('rel', "stylesheet");
elmStyle.setAttribute('title', htmlClass);
elmStyle.setAttribute('href', stylesDataUrl);
elmHead.appendChild(elmStyle);

// add javascript to the head
elmScript = document.createElement("script");
elmScript.setAttribute('type','text/javascript');
elmScript.setAttribute('title', htmlClass);
elmScript.setAttribute('src', scriptDataUrl);
elmHead.appendChild(elmScript);
